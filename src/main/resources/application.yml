spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/${POSTGRES_DB:nexus_aggregate}
    username: ${POSTGRES_USER:nexus}
    password: ${POSTGRES_PASSWORD:nexus}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show_sql: true
  sql:
    init:
      platform: postgres
  application:
    name: nexus-aggregate
  threads:
    virtual:
      enabled: true
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
  cache:
    type: redis
    redis:
      time-to-live: 60000

nexus:
  sources:
    - name: "alphaVantage"
      url: "https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol={ticker}&apikey=${ALPHA_VANTAGE_API_KEY}"
      enabled: true
    - name: "finnhub"
      url: "https://finnhub.io/api/v1/quote?symbol={ticker}&token=${FINNHUB_API_KEY}"
      enabled: true

resilience4j:
  circuitbreaker:
    instances:
      alphaVantage:
        register-health-indicator: true
        sliding-window-size: 10
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10s
      finnhub:
        register-health-indicator: true
        sliding-window-size: 10
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10s

management:
  endpoints:
    web:
      exposure:
        include: health,info,circuitbreakers
  endpoint:
    health:
      show-details: always